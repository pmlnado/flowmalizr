ggplot2::labs(x = "", y = "Group", fill = "Phenotype") +
ggplot2::theme(aspect.ratio = 20,
axis.text.x = ggplot2::element_blank(),
axis.ticks.x = ggplot2::element_blank(),
axis.text.y = ggplot2::element_blank(),
axis.ticks.y = ggplot2::element_blank(),
legend.key.size = ggplot2::unit(.3, 'cm'),legend.title = ggplot2::element_text(size=10))
View(gg_sep2)
View(gg_sep2)
visualize_groups <- function(){
gggroup_visualize <- gg_sep %>%
dplyr::filter(!is.na(percentage_of_total)) %>%
dplyr::group_by(group) %>%
dplyr::summarise(group, name, Perc, percentage_of_total)
gggroup_visualize <<- ggplot2::ggplot(gggroup_visualize,
ggplot2::aes(x = forcats::fct_reorder(name, percentage_of_total),
y = percentage_of_total, fill = group)) +
ggplot2::geom_bar(stat = "identity") +
ggplot2::coord_flip() +
ggplot2::labs(x = "Phenotype", y = "Mean Percent") +
ggplot2::facet_wrap(~group) +
ggplot2::geom_text(ggplot2::aes(label=Perc),
position=ggplot2::position_dodge(width = 0), hjust = -.1,
size = 3) +
ggplot2::scale_y_continuous(limits = c(0, max(gg_sep2$percentage_of_total)))
return(gggroup_visualize)
}
visualize_groups()
visualize_groups()
# Plot percentage of unique populations
visualize_groups <- function(){
gg_visualize <- gg_sep %>%
dplyr::filter(!is.na(percentage_of_total)) %>%
dplyr::group_by(group) %>%
dplyr::summarise(group, name, Perc, percentage_of_total)
gggroup_visualize <<- ggplot2::ggplot(gg_visualize,
ggplot2::aes(x = forcats::fct_reorder(name, percentage_of_total),
y = percentage_of_total, fill = group)) +
ggplot2::geom_bar(stat = "identity") +
ggplot2::coord_flip() +
ggplot2::labs(x = "Phenotype", y = "Mean Percent") +
ggplot2::facet_wrap(~group) +
ggplot2::geom_text(ggplot2::aes(label=Perc),
position=ggplot2::position_dodge(width = 0), hjust = -.1,
size = 3) +
ggplot2::scale_y_continuous(limits = c(0, max(gg_sep2$percentage_of_total)))
return(gggroup_visualize)
}
visualize_groups()
group_v_group <- function(){
gg_1v1 <- gg_sep %>%
dplyr::filter(!is.na(percentage_of_total)) %>%
dplyr::group_by(group) %>%
dplyr::summarise(group, name, Perc, percentage_of_total) %>%
dplyr::filter(group %in% c(1,2))
gg1v1_visualize <- ggplot2::ggplot(gg1v1, ggplot2::aes(x = name, y = percentage_of_total,
fill = group)) +
ggplot2::geom_bar(position="fill", stat="identity") +
ggplot2::coord_flip() +
ggplot2::labs(x = "Phenotype", y = "Mean Percent") +
ggplot2::geom_text(ggplot2::aes(label = Perc, y = .5),
position = ggplot2::position_stack(vjust = 0.5))
return(gg1v1_visualize)
}
group_v_group()
return(gg1v1_visualize)
group_v_group <- function(){
gg_1v1 <- gg_sep %>%
dplyr::filter(!is.na(percentage_of_total)) %>%
dplyr::group_by(group) %>%
dplyr::summarise(group, name, Perc, percentage_of_total) %>%
dplyr::filter(group %in% c(1,2))
gg1v1_visualize <- ggplot2::ggplot(gg_1v1, ggplot2::aes(x = name, y = percentage_of_total,
fill = group)) +
ggplot2::geom_bar(position="fill", stat="identity") +
ggplot2::coord_flip() +
ggplot2::labs(x = "Phenotype", y = "Mean Percent") +
ggplot2::geom_text(ggplot2::aes(label = Perc, y = .5),
position = ggplot2::position_stack(vjust = 0.5))
return(gg1v1_visualize)
}
group_v_group()
gg1v1_visualize <- ggplot2::ggplot(gg_1v1, ggplot2::aes(x = name, y = percentage_of_total,
fill = group)) +
ggplot2::geom_bar(position="fill", stat="identity") +
ggplot2::coord_flip() +
ggplot2::labs(x = "Phenotype", y = "Mean Percent") +
ggplot2::geom_text(ggplot2::aes(label = Perc, y = .5),
position = ggplot2::position_stack(vjust = 0.5))
group_v_group <- function(groups){
gg_1v1 <- gg_sep %>%
dplyr::filter(!is.na(percentage_of_total)) %>%
dplyr::group_by(group) %>%
dplyr::summarise(group, name, Perc, percentage_of_total) %>%
dplyr::filter(group %in% c(groups))
gg1v1_visualize <- ggplot2::ggplot(gg_1v1, ggplot2::aes(x = name, y = percentage_of_total,
fill = group)) +
ggplot2::geom_bar(position="fill", stat="identity") +
ggplot2::coord_flip() +
ggplot2::labs(x = "Phenotype", y = "Mean Percent") +
ggplot2::geom_text(ggplot2::aes(label = Perc, y = .5),
position = ggplot2::position_stack(vjust = 0.5))
return(gg1v1_visualize)
}
group_v_group(1,3)
group_v_group(1)
group_v_group <- function(groups, groups){
gg_1v1 <- gg_sep %>%
dplyr::filter(!is.na(percentage_of_total)) %>%
dplyr::group_by(group) %>%
dplyr::summarise(group, name, Perc, percentage_of_total) %>%
dplyr::filter(group %in% c(groups))
gg1v1_visualize <- ggplot2::ggplot(gg_1v1, ggplot2::aes(x = name, y = percentage_of_total,
fill = group)) +
ggplot2::geom_bar(position="fill", stat="identity") +
ggplot2::coord_flip() +
ggplot2::labs(x = "Phenotype", y = "Mean Percent") +
ggplot2::geom_text(ggplot2::aes(label = Perc, y = .5),
position = ggplot2::position_stack(vjust = 0.5))
return(gg1v1_visualize)
}
group_v_group(2)
visualize_groups()
group_v_group(2)
visualize_groups()
group_v_group <- function(groupA, groupB){
gg_1v1 <- gg_sep %>%
dplyr::filter(!is.na(percentage_of_total)) %>%
dplyr::group_by(group) %>%
dplyr::summarise(group, name, Perc, percentage_of_total) %>%
dplyr::filter(group %in% c(groupA, groupB))
gg1v1_visualize <- ggplot2::ggplot(gg_1v1, ggplot2::aes(x = name, y = percentage_of_total,
fill = group)) +
ggplot2::geom_bar(position="fill", stat="identity") +
ggplot2::coord_flip() +
ggplot2::labs(x = "Phenotype", y = "Mean Percent") +
ggplot2::geom_text(ggplot2::aes(label = Perc, y = .5),
position = ggplot2::position_stack(vjust = 0.5))
return(gg1v1_visualize)
}
group_v_group(1,2)
view_pops()
visualize_groups()
group_v_group(1,2)
group_v_group(1,5)
view_pops()
visualize_groups()
library(flowmalizr)
library(flowmalizr)
flowmalizr(path = path_to_data)
path_to_data <- system.file("extdata", "example_data.xlsx", package = "flowmalizr")
sep_groups()
flowmalizr(path = path_to_data)
sep_groups()
flowmalizr(path = path_to_data)
flowmalizr <- function(path){
xlsx_file <- readxl::read_excel(path)
imported_df <<- tidyr::pivot_longer(xlsx_file, cols = -c(1:3))
imported_df <<- imported_df %>%
dplyr::mutate(cells_from_total = total_cell_count_per_mL*value/live_cells) %>%
dplyr::select(1, 2, 4, 6) %>%
dplyr::mutate(percentage_of_total = cells_from_total/total_cell_count_per_mL*100) %>%
dplyr::arrange(percentage_of_total)
return(imported_df)
}
sep_groups <- function(){
df_sep <<- imported_df %>%
tidyr::separate(groups, c("group", "replicate"),
sep = "(?=[A-Za-z])(?<=[0-9])|(?=[0-9])(?<=[A-Za-z])")
return(df_sep)
}
# Pull unique gated populations
unique_pops <- function(){
unique_pop <<- df_sep %>% dplyr::group_by(name) %>%
dplyr::summarise_at(vars(percentage_of_total),funs(mean(.,na.rm=TRUE))) %>%
dplyr::mutate(Perc = paste0(round(percentage_of_total, digits = 2), "%")) %>%
dplyr::arrange(desc(percentage_of_total)) %>%
dplyr::select(c(1,3))
return(unique_pop)
}
# Determine mean populations of experiment
view_pops <- function(){
vizualise <<-
imported_df %>% dplyr::group_by(name) %>%
dplyr::summarise_at(dplyr::vars(percentage_of_total),
dplyr::funs(mean(.,na.rm=TRUE))) %>%
dplyr::mutate(Perc = paste0(round(percentage_of_total, digits = 2), "%")) %>%
dplyr::arrange(desc(percentage_of_total))
return(vizualise)
}
# Plot percentage of unique populations
visualize_groups <- function(){
gg_visualize <- gg_sep %>%
dplyr::filter(!is.na(percentage_of_total)) %>%
dplyr::group_by(group) %>%
dplyr::summarise(group, name, Perc, percentage_of_total)
gggroup_visualize <<- ggplot2::ggplot(gg_visualize,
ggplot2::aes(x = forcats::fct_reorder(name, percentage_of_total),
y = percentage_of_total, fill = group)) +
ggplot2::geom_bar(stat = "identity") +
ggplot2::coord_flip() +
ggplot2::labs(x = "Phenotype", y = "Mean Percent") +
ggplot2::facet_wrap(~group) +
ggplot2::geom_text(ggplot2::aes(label=Perc),
position=ggplot2::position_dodge(width = 0), hjust = -.1,
size = 3) +
ggplot2::scale_y_continuous(limits = c(0, max(gg_sep2$percentage_of_total)))
return(gggroup_visualize)
}
group_v_group <- function(groupA, groupB){
gg_1v1 <- gg_sep %>%
dplyr::filter(!is.na(percentage_of_total)) %>%
dplyr::group_by(group) %>%
dplyr::summarise(group, name, Perc, percentage_of_total) %>%
dplyr::filter(group %in% c(groupA, groupB))
gg1v1_visualize <- ggplot2::ggplot(gg_1v1, ggplot2::aes(x = name, y = percentage_of_total,
fill = group)) +
ggplot2::geom_bar(position="fill", stat="identity") +
ggplot2::coord_flip() +
ggplot2::labs(x = "Phenotype", y = "Mean Percent") +
ggplot2::geom_text(ggplot2::aes(label = Perc, y = .5),
position = ggplot2::position_stack(vjust = 0.5))
return(gg1v1_visualize)
}
flowmalizr(path = path_to_data)
library(devtools)
library(roxygen2)
load_all()
library(flowmalizr)
path_to_data <- system.file("extdata", "example_data.xlsx", package = "flowmalizr")
flowmalizr <- function(path){
xlsx_file <- readxl::read_excel(path)
imported_df <<- tidyr::pivot_longer(xlsx_file, cols = -c(1:3))
imported_df <<- imported_df %>%
dplyr::mutate(cells_from_total = total_cell_count_per_mL*value/live_cells) %>%
dplyr::select(1, 2, 4, 6) %>%
dplyr::mutate(percentage_of_total = cells_from_total/total_cell_count_per_mL*100) %>%
dplyr::arrange(percentage_of_total)
return(imported_df)
}
sep_groups <- function(){
df_sep <<- imported_df %>%
tidyr::separate(groups, c("group", "replicate"),
sep = "(?=[A-Za-z])(?<=[0-9])|(?=[0-9])(?<=[A-Za-z])")
return(df_sep)
}
# Pull unique gated populations
unique_pops <- function(){
unique_pop <<- df_sep %>% dplyr::group_by(name) %>%
dplyr::summarise_at(vars(percentage_of_total),funs(mean(.,na.rm=TRUE))) %>%
dplyr::mutate(Perc = paste0(round(percentage_of_total, digits = 2), "%")) %>%
dplyr::arrange(desc(percentage_of_total)) %>%
dplyr::select(c(1,3))
return(unique_pop)
}
# Determine mean populations of experiment
view_pops <- function(){
vizualise <<-
imported_df %>% dplyr::group_by(name) %>%
dplyr::summarise_at(dplyr::vars(percentage_of_total),
dplyr::funs(mean(.,na.rm=TRUE))) %>%
dplyr::mutate(Perc = paste0(round(percentage_of_total, digits = 2), "%")) %>%
dplyr::arrange(desc(percentage_of_total))
return(vizualise)
}
# Plot percentage of unique populations
visualize_groups <- function(){
gg_visualize <- gg_sep %>%
dplyr::filter(!is.na(percentage_of_total)) %>%
dplyr::group_by(group) %>%
dplyr::summarise(group, name, Perc, percentage_of_total)
gggroup_visualize <<- ggplot2::ggplot(gg_visualize,
ggplot2::aes(x = forcats::fct_reorder(name, percentage_of_total),
y = percentage_of_total, fill = group)) +
ggplot2::geom_bar(stat = "identity") +
ggplot2::coord_flip() +
ggplot2::labs(x = "Phenotype", y = "Mean Percent") +
ggplot2::facet_wrap(~group) +
ggplot2::geom_text(ggplot2::aes(label=Perc),
position=ggplot2::position_dodge(width = 0), hjust = -.1,
size = 3) +
ggplot2::scale_y_continuous(limits = c(0, max(gg_sep2$percentage_of_total)))
return(gggroup_visualize)
}
group_v_group <- function(groupA, groupB){
gg_1v1 <- gg_sep %>%
dplyr::filter(!is.na(percentage_of_total)) %>%
dplyr::group_by(group) %>%
dplyr::summarise(group, name, Perc, percentage_of_total) %>%
dplyr::filter(group %in% c(groupA, groupB))
gg1v1_visualize <- ggplot2::ggplot(gg_1v1, ggplot2::aes(x = name, y = percentage_of_total,
fill = group)) +
ggplot2::geom_bar(position="fill", stat="identity") +
ggplot2::coord_flip() +
ggplot2::labs(x = "Phenotype", y = "Mean Percent") +
ggplot2::geom_text(ggplot2::aes(label = Perc, y = .5),
position = ggplot2::position_stack(vjust = 0.5))
return(gg1v1_visualize)
}
flowmalizr(path = path_to_data)
sep_groups()
unique_pops()
# Pull unique gated populations
unique_pops <- function(){
unique_pop <<- df_sep %>% dplyr::group_by(name) %>%
dplyr::summarise_at(dplyr::vars(percentage_of_total),funs(mean(.,na.rm=TRUE))) %>%
dplyr::mutate(Perc = paste0(round(percentage_of_total, digits = 2), "%")) %>%
dplyr::arrange(desc(percentage_of_total)) %>%
dplyr::select(c(1,3))
return(unique_pop)
}
unique_pops()
# Determine mean populations of experiment
view_pops <- function(){
vizualise <<-
imported_df %>% dplyr::group_by(name) %>%
dplyr::summarise_at(dplyr::vars(percentage_of_total),
dplyr::funs(mean(.,na.rm=TRUE))) %>%
dplyr::mutate(Perc = paste0(round(percentage_of_total, digits = 2), "%")) %>%
dplyr::arrange(desc(percentage_of_total))
return(vizualise)
}
# Plot percentage of unique populations
visualize_groups <- function(){
gg_visualize <- gg_sep %>%
dplyr::filter(!is.na(percentage_of_total)) %>%
dplyr::group_by(group) %>%
dplyr::summarise(group, name, Perc, percentage_of_total)
gggroup_visualize <<- ggplot2::ggplot(gg_visualize,
ggplot2::aes(x = forcats::fct_reorder(name, percentage_of_total),
y = percentage_of_total, fill = group)) +
ggplot2::geom_bar(stat = "identity") +
ggplot2::coord_flip() +
ggplot2::labs(x = "Phenotype", y = "Mean Percent") +
ggplot2::facet_wrap(~group) +
ggplot2::geom_text(ggplot2::aes(label=Perc),
position=ggplot2::position_dodge(width = 0), hjust = -.1,
size = 3) +
ggplot2::scale_y_continuous(limits = c(0, max(gg_sep2$percentage_of_total)))
return(gggroup_visualize)
}
group_v_group <- function(groupA, groupB){
gg_1v1 <- gg_sep %>%
dplyr::filter(!is.na(percentage_of_total)) %>%
dplyr::group_by(group) %>%
dplyr::summarise(group, name, Perc, percentage_of_total) %>%
dplyr::filter(group %in% c(groupA, groupB))
gg1v1_visualize <- ggplot2::ggplot(gg_1v1, ggplot2::aes(x = name, y = percentage_of_total,
fill = group)) +
ggplot2::geom_bar(position="fill", stat="identity") +
ggplot2::coord_flip() +
ggplot2::labs(x = "Phenotype", y = "Mean Percent") +
ggplot2::geom_text(ggplot2::aes(label = Perc, y = .5),
position = ggplot2::position_stack(vjust = 0.5))
return(gg1v1_visualize)
}
view_pops()
visualize_groups()
unique_pop <<- df_sep %>% dplyr::group_by(name) %>%
dplyr::summarise_at(dplyr::vars(percentage_of_total),dplyr::funs(mean(.,na.rm=TRUE))) %>%
dplyr::mutate(Perc = paste0(round(percentage_of_total, digits = 2), "%")) %>%
dplyr::arrange(dplyr::desc(percentage_of_total)) %>%
dplyr::select(c(1,3))
unique_pops()
unique_pops <- function(){
unique_pop <<- df_sep %>% dplyr::group_by(name) %>%
dplyr::summarise_at(dplyr::vars(percentage_of_total), dplyr::funs(mean(.,na.rm=TRUE))) %>%
dplyr::mutate(Perc = paste0(round(percentage_of_total, digits = 2), "%")) %>%
dplyr::arrange(dplyr::desc(percentage_of_total)) %>%
dplyr::select(c(1,3))
return(unique_pop)
}
unique_pops()
view_pops()
visualize_groups()
#almost for 1v1 comparison
ggplot2::ggplot(gg_sep3, ggplot2::aes(x = name, y = percentage_of_total,
fill = group)) +
ggplot2::geom_bar(position="fill", stat="identity") +
ggplot2::coord_flip() +
ggplot2::labs(x = "Phenotype", y = "Mean Percent") +
ggplot2::geom_text(ggplot2::aes(label = Perc, y = .5),
position = ggplot2::position_stack(vjust = 0.5))
vizualise
unique_pop
imported_df
flowmalizr(path = path_to_data)
unique_pops()
df_sep %>% dplyr::group_by(name) %>%
dplyr::summarise_at(dplyr::vars(percentage_of_total),
dplyr::funs(mean(.,na.rm=TRUE))) %>%
dplyr::mutate(Perc = paste0(round(percentage_of_total, digits = 2), "%")) %>%
dplyr::arrange(desc(percentage_of_total))
# Plot percentage of unique populations
visualize_groups <- function(){
gg_visualize <- df_sep %>%
dplyr::filter(!is.na(percentage_of_total)) %>%
dplyr::group_by(group) %>%
dplyr::summarise(group, name, Perc, percentage_of_total)
gggroup_visualize <<- ggplot2::ggplot(gg_visualize,
ggplot2::aes(x = forcats::fct_reorder(name, percentage_of_total),
y = percentage_of_total, fill = group)) +
ggplot2::geom_bar(stat = "identity") +
ggplot2::coord_flip() +
ggplot2::labs(x = "Phenotype", y = "Mean Percent") +
ggplot2::facet_wrap(~group) +
ggplot2::geom_text(ggplot2::aes(label=Perc),
position=ggplot2::position_dodge(width = 0), hjust = -.1,
size = 3) +
ggplot2::scale_y_continuous(limits = c(0, max(gg_sep2$percentage_of_total)))
return(gggroup_visualize)
}
visualize_groups()
visualize_groups <- function(){
gg_visualize <- df_sep %>%
dplyr::filter(!is.na(percentage_of_total)) %>%
dplyr::group_by(group) %>%
dplyr::summarise(group, name, Perc, percentage_of_total)
gggroup_visualize <<- ggplot2::ggplot(gg_visualize,
ggplot2::aes(x = forcats::fct_reorder(name, percentage_of_total),
y = percentage_of_total, fill = group)) +
ggplot2::geom_bar(stat = "identity") +
ggplot2::coord_flip() +
ggplot2::labs(x = "Phenotype", y = "Mean Percent") +
ggplot2::facet_wrap(~group) +
ggplot2::geom_text(ggplot2::aes(label=Perc),
position=ggplot2::position_dodge(width = 0), hjust = -.1,
size = 3) +
ggplot2::scale_y_continuous(limits = c(0, max(gg_sep2$percentage_of_total)))
return(gggroup_visualize)
}
df_sep
visualize_groups()
df_sep %>% dplyr::group_by(group, name) %>%
dplyr::summarise_at(dplyr::vars(percentage_of_total),dplyr::funs(mean(.,na.rm=TRUE))) %>%
dplyr::mutate(Perc = paste0(round(percentage_of_total, digits = 2), "%")) %>%
dplyr::arrange(desc(percentage_of_total))
gg_sep <<- df_sep %>% dplyr::group_by(group, name) %>%
dplyr::summarise_at(dplyr::vars(percentage_of_total),dplyr::funs(mean(.,na.rm=TRUE))) %>%
dplyr::mutate(Perc = paste0(round(percentage_of_total, digits = 2), "%")) %>%
dplyr::arrange(desc(percentage_of_total))
gg_sep <<- df_sep %>% dplyr::group_by(group, name) %>%
dplyr::summarise_at(dplyr::vars(percentage_of_total),dplyr::funs(mean(.,na.rm=TRUE))) %>%
dplyr::mutate(Perc = paste0(round(percentage_of_total, digits = 2), "%")) %>%
dplyr::arrange(desc(percentage_of_total))
gg_sep %>%
dplyr::filter(!is.na(percentage_of_total)) %>%
dplyr::group_by(group) %>%
dplyr::summarise(group, name, Perc, percentage_of_total)
gg_sep
gg_sep %>%
dplyr::filter(!is.na(percentage_of_total)) %>%
dplyr::group_by(group) %>%
dplyr::summarise(group, name, Perc, percentage_of_total)
gggroup_visualize <<- ggplot2::ggplot(gg_visualize,
ggplot2::aes(x = forcats::fct_reorder(name, percentage_of_total),
y = percentage_of_total, fill = group)) +
ggplot2::geom_bar(stat = "identity") +
ggplot2::coord_flip() +
ggplot2::labs(x = "Phenotype", y = "Mean Percent") +
ggplot2::facet_wrap(~group) +
ggplot2::geom_text(ggplot2::aes(label=Perc),
position=ggplot2::position_dodge(width = 0), hjust = -.1,
size = 3) +
ggplot2::scale_y_continuous(limits = c(0, max(gg_sep2$percentage_of_total)))
visualize_groups <- function(){
gg_sep <<- df_sep %>% dplyr::group_by(group, name) %>%
dplyr::summarise_at(dplyr::vars(percentage_of_total),dplyr::funs(mean(.,na.rm=TRUE))) %>%
dplyr::mutate(Perc = paste0(round(percentage_of_total, digits = 2), "%")) %>%
dplyr::arrange(desc(percentage_of_total))
gg_visualize <- gg_sep %>%
dplyr::filter(!is.na(percentage_of_total)) %>%
dplyr::group_by(group) %>%
dplyr::summarise(group, name, Perc, percentage_of_total)
gggroup_visualize <<- ggplot2::ggplot(gg_visualize,
ggplot2::aes(x = forcats::fct_reorder(name, percentage_of_total),
y = percentage_of_total, fill = group)) +
ggplot2::geom_bar(stat = "identity") +
ggplot2::coord_flip() +
ggplot2::labs(x = "Phenotype", y = "Mean Percent") +
ggplot2::facet_wrap(~group) +
ggplot2::geom_text(ggplot2::aes(label=Perc),
position=ggplot2::position_dodge(width = 0), hjust = -.1,
size = 3) +
ggplot2::scale_y_continuous(limits = c(0, max(gg_sep2$percentage_of_total)))
return(gggroup_visualize)
}
visualize_groups()
# Plot percentage of unique populations
visualize_groups <- function(){
gg_sep <<- df_sep %>% dplyr::group_by(group, name) %>%
dplyr::summarise_at(dplyr::vars(percentage_of_total),dplyr::funs(mean(.,na.rm=TRUE))) %>%
dplyr::mutate(Perc = paste0(round(percentage_of_total, digits = 2), "%")) %>%
dplyr::arrange(desc(percentage_of_total))
gg_visualize <- gg_sep %>%
dplyr::filter(!is.na(percentage_of_total)) %>%
dplyr::group_by(group) %>%
dplyr::summarise(group, name, Perc, percentage_of_total)
gggroup_visualize <<- ggplot2::ggplot(gg_visualize,
ggplot2::aes(x = forcats::fct_reorder(name, percentage_of_total),
y = percentage_of_total, fill = group)) +
ggplot2::geom_bar(stat = "identity") +
ggplot2::coord_flip() +
ggplot2::labs(x = "Phenotype", y = "Mean Percent") +
ggplot2::facet_wrap(~group) +
ggplot2::geom_text(ggplot2::aes(label=Perc),
position=ggplot2::position_dodge(width = 0), hjust = -.1,
size = 3) +
ggplot2::scale_y_continuous(limits = c(0, max(gg_sep$percentage_of_total)))
return(gggroup_visualize)
}
visualize_groups()
